{"singlePage": [], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "title": "tango", "subTitle": "just tango ", "avatarUrl": "https://avatars.githubusercontent.com/u/25767862?v=4", "GMEEK_VERSION": "last", "postListJson": {"P1": {"htmlDir": "docs/post/Golang-sui-pian-hua-xue-xi-bi-ji.html", "labels": ["golang"], "postTitle": "Golang\u788e\u7247\u5316\u5b66\u4e60\u7b14\u8bb0", "postUrl": "post/Golang-sui-pian-hua-xue-xi-bi-ji.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/1", "commentNum": 0, "wordCount": 1560, "description": "# Golang\u788e\u7247\u5316\u5b66\u4e60\u7b14\u8bb0\r\n\r\n- `counter := map[int]int{}  \u548c counter := make(map[int]int)`\u662f\u7b49\u4ef7\u7684\uff0c\u76f4\u63a5\u4e0a\u53bb{}\u521d\u59cb\u5316\u66f4\u88c5\r\n\r\n- \u5bf9slice\uff0cmap\u8fdb\u884cfor\u904d\u5386\uff0c\u5f97\u5230\u7684\u503c\u53d6\u51b3\u4e8e\u7528\u51e0\u4e2a\u503c\u63a5\u6536\r\n\r\n  ```Golang\r\n  for i,k := range slice  #i\u4e3a\u7d22\u5f15  k\u4e3a\u503c\r\n  for i := range slice # \u5219i\u4ec5\u4e3a\u7d22\u5f15\r\n  \r\n  for k,v := range map  # key value\u90fd\u80fd\u53d6\u5230\r\n  for k := range map # \u53ea\u6709k\r\n  ```\r\n\r\n- `make`\u521b\u5efa\u7684slice map \u4f1a\u521d\u59cb\u5316\u4e3a\u8be5\u7c7b\u578b\u7684\u96f6\u503c\uff0c\u8fd4\u56de\u53d8\u91cf\r\n\r\n  ```Golang\r\n  a:=make([]int,2)\r\n  a[0]  #0 \r\n  a[1]  # 0\r\n  ```\r\n\r\n- `container/list`\u8fd9\u662f\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\uff0c\u4ed6\u7684\u4e3b\u8981\u65b9\u6cd5\u6709\uff1a\r\n\r\n  ```Golang\r\n  l:=list.New()\r\n  l.Front()\r\n  l.Back()\r\n  l.PushBack(\u4f60\u7684\u6570\u636e)\r\n  l.PushFront(\u4f60\u7684\u6570\u636e)\r\n  l.Remove(e) #e\u4e00\u5b9a\u662f\u4ed6\u7684Element\u7c7b\u578b \u6bd4\u5982 l.Front \u800c\u4e0d\u662f\u4f60\u7684\u6570\u636e  e.Value\u624d\u662f\u4f60\u7684\u6570\u636e\r\n  l.MoveFront(e) #e\u662fElement\u7c7b\u578b \u5c06\u8981\u79fb\u52a8\u7684\u6570\u636e\r\n  l.MoveBack(e)\r\n  ```\r\n\r\n\r\n- \u5b57\u7b26\u4e32\u904d\u5386\u7684\u7ed3\u679c\u662f???\r\n\r\n  ```go\r\n  a := \"asdasf\"\r\n  for _, c := range a {\r\n    fmt.Println(c)\r\n  }\r\n  #97\r\n  115\r\n  100\r\n  97\r\n  115\r\n  102\r\n  a := \"\u591f\u795e\u5450\u8650\"\r\n  for _,i := range a {\r\n    fmt.Println(i)\r\n  }\r\n  #\r\n  22815\r\n  31070\r\n  21584\r\n  34384\r\n  ```\r\n\r\n- Slice\u53d6\u6700\u540e\u4e00\u4e2a\u5143\u7d20 \u7d22\u5f15\u4e0d\u80fd\u662f-1 \r\n\r\n  ```go\r\n  \ta := []int{}\r\n  \tfmt.Println(a[-1])  # must be a non-negtive\r\n  \tfmt.Println(a[len(a)-1])\r\n  ```\r\n\r\n- `len()`\u83b7\u5f97\u7684\u4e2d\u6587\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u662f\u4f60\u60f3\u7684\uff0c\u83b7\u53d6\u7684\u662f\u5b57\u8282\u957f\u5ea6\r\n\r\n  ```\r\n  \ta := \"\u591f\u795e\u5450\u8650\"\r\n  \tfmt.Println(len(a)) # 12 fuck\r\n  \tb := []rune(a)   # 4\r\n  \tb := []byte(a)  # 4  \r\n  ```\r\n\r\n\r\n-  **Printf\u3001Sprintf\u3001Fprintf\u533a\u522b**\r\n\r\n  # ![image-20220427171722010](https://raw.githubusercontent.com/evilvlso/picsbed/master/image-20220427171722010.png)\r\n\r\n- \u5c0f\u5199\u53d8\u91cf\u5728**\u672c\u5305\u5185**\u53ef\u4ee5\u8bbf\u95ee\r\n\r\n- \u5b57\u7b26\u4e32\u5339\u914d\r\n\r\n- ```\r\n  pattern []string\r\n  pattern[0]==\"a\"  ??\r\n  ```\r\n\r\n- \u4f7f\u7528unicode\u7b5b\u9009\u5339\u914d\u4e2d\u6587\r\n\r\n ```\r\n  # \u5339\u914d\u6240\u6709\u6c49\u5b57\r\n  print(re.findall('[\\u4e00-\\u9fa5]', data))\r\n ```\u3002", "top": 0, "createdAt": 1712045903, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P2": {"htmlDir": "docs/post/vscode-zhong-python-huan-jing-pei-zhi-wen-jian.html", "labels": ["vscode"], "postTitle": "vscode\u4e2dpython\u73af\u5883\u914d\u7f6e\u6587\u4ef6", "postUrl": "post/vscode-zhong-python-huan-jing-pei-zhi-wen-jian.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/2", "commentNum": 0, "wordCount": 1715, "description": "\u6709\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6 :\r\nsettings.json - \u7528\u6765\u8fd0\u884c\u7684\u914d\u7f6e\r\nlaunch.json  -  \u7528\u6765\u8c03\u8bd5\u7684\u914d\u7f6e\r\n> \u5212\u53d6\u4ee3\u7801\u8fd0\u884c\u4f7f\u7528\u7684\u662f settings.json \u914d\u7f6e  \r\n> vscode \u4e0b\u9762\u7684\u89e3\u91ca\u5668\u9009\u62e9\u53ef\u4ee5\u76f4\u63a5\u66f4\u6539\u4e24\u4e2a\u6587\u4ef6\u7684 python \u89e3\u91ca\u5668\u8def\u5f84\r\n\r\n\u914d\u7f6e\u5c55\u793a:  \r\nsettings.json  \r\n\r\n```JSON\r\n{\r\n    \"launch\": {\r\n\r\n        \"configurations\": [\r\n            {\"name\":\"Launch\",\r\n            \"type\":\"python\",\r\n            \"request\":\"launch\",\r\n            \"console\": \"integratedTerminal\",\r\n            \"cwd\":\"${fileDirname}\", ## \u89e3\u51b3\u6267\u884c\u8def\u5f84\u95ee\u9898\r\n             //\u5de5\u4f5c\u8def\u5f84\u7528\u6253\u5f00\u7684\u9876\u5c42\u76ee\u5f55\uff0c\u5f71\u54cd\u6587\u4ef6\u8bfb\u5199\u76f8\u5bf9\u8def\u5f84\r\n            //\"cwd\": \"${workspaceFolder}\", \r\n            //\u5de5\u4f5c\u8def\u5f84\u7528\u5f53\u524d\u6587\u4ef6\u6240\u5728\u76ee\u5f55\uff0c\u5f71\u54cd\u6587\u4ef6\u8bfb\u5199\u76f8\u5bf9\u8def\u5f84\r\n            //\"cwd\": \"${fileDirname}\",\r\n            //sys.path \u4f1a\u52a0\u5165\u9876\u5c42\u76ee\u5f55\uff0c\u5f71\u54cd\u6a21\u5757\u5bfc\u5165\u67e5\u8be2\u8def\u5f84\r\n            //\"env\": { \"PYTHONPATH\": \"${workspaceFolder}\" }\r\n            }\r\n        ],\r\n        \"compounds\": []\r\n    },\r\n    \"python.pythonPath\": \"/usr/local/anaconda3/envs/mrcnn/bin/python\"\r\n}\r\n```\r\nlaunch.json  \r\n```JSON\r\n{\r\n    \"version\": \"0.2.0\",\r\n    \"configurations\": [\r\n\r\n        {\r\n            \"name\": \"Python: base\",\r\n            \"type\": \"python\",\r\n            \"request\": \"launch\",\r\n            \"program\": \"${file}\",\r\n            \"console\": \"integratedTerminal\",\r\n            \"pythonPath\": \"/usr/local/anaconda3/bin/python\"\r\n        },\r\n        {\r\n            \"name\": \"Python: env\",\r\n            \"type\": \"python\",\r\n            \"request\": \"launch\",\r\n            \"program\": \"${file}\",\r\n            \"console\": \"integratedTerminal\",\r\n            \"pythonPath\": \"~/env/bin/python\"\r\n        },\r\n        {\r\n            \"name\": \"Python: mrcnn\",\r\n            \"type\": \"python\",\r\n            \"request\": \"launch\",\r\n            \"program\": \"${file}\",\r\n            \"console\": \"integratedTerminal\",\r\n            \"pythonPath\": \"/usr/local/anaconda3/envs/mrcnn/bin/python\"\r\n        },\r\n    ]\r\n\r\n}\r\n```\u3002", "top": 0, "createdAt": 1712046682, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P3": {"htmlDir": "docs/post/vimrc-bei-fen.html", "labels": ["vimrc"], "postTitle": "vimrc\u5907\u4efd", "postUrl": "post/vimrc-bei-fen.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/3", "commentNum": 0, "wordCount": 1827, "description": "> \u4e07\u53e4\u957f\u9752\u7684\u7f16\u8f91\u5668 **vim**\r\n> \r\n> \u800c\u4e14X\u683c\u6ee1\u6ee1\r\n\r\n### vimrc\r\n```\r\nset nocompatible  \r\nset hlsearch\r\nset number  \r\nset history=1000\r\nset background=dark \r\nsyntax on  \r\nset autoindent \r\nset tabstop=4\r\nset expandtab\r\nset shiftwidth=4\r\n\r\nlet mapleader=\",\"\r\n\r\n\" colors\r\nset background=dark\r\ncolorscheme hybrid\r\n\r\n\" jklh\r\nmap <C-j> <C-W>j\r\nmap <C-k> <C-W>k\r\nmap <C-h> <C-W>h\r\nmap <C-l> <C-W>l\r\n\r\n\" vim-plug\r\ncall plug#begin('~/.vim/plugged')\r\nPlug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }\r\nPlug 'yggdroot/indentline'\r\nPlug 'python-mode/python-mode', { 'for': 'python', 'branch': 'develop' }\r\nPlug 'majutsushi/tagbar'\r\nPlug 'tpope/vim-commentary'\r\n\r\ncall plug#end()\r\n\" NERDTree\r\nlet NERDTreeWinSize=25\r\nmap <F9> :NERDTreeToggle<CR>\r\n\r\n\" indentline\r\nlet g:indentline_char = '\u00a6'\r\n\r\n\r\n\" Tagbar\r\nnmap <F8> :TagbarToggle<CR>\r\nlet g:tagbar_ctags_bin = \"/usr/local/bin/ctags\"\r\nlet g:tagbar_width=28\r\n\r\n\r\n\" python-mode\r\nlet g:pymode_rope = 1\r\nlet g:pymode_rope_completion = 1\r\nlet g:pymode_rope_complete_on_dot = 1\r\nset completeopt=menuone,noinsert\r\n\r\n\" let g:pymode_rope_completion_bind = ''\r\n\" Documentation\r\nlet g:pymode_doc = 0\r\nlet g:pymode_doc_key = 'K'\r\n\"Linting\r\nlet g:pymode_lint = 1\r\nlet g:pymode_lint_checker = \"pyflakes,pep8\"\r\n\" let g:pymode_lint_on_write = 1\r\n\" Support virtualenv\r\nlet g:pymode_virtualenv = 1\r\n\" Enable breakpoints plugin\r\nlet g:pymode_breakpoint = 1\r\nlet g:pymode_breakpoint_bind = '<leader>b'\r\n\" syntax highlighting\r\nlet g:pymode_syntax = 1\r\nlet g:pymode_syntax_all = 1\r\nlet g:pymode_syntax_indent_errors = g:pymode_syntax_all\r\nlet g:pymode_syntax_space_errors = g:pymode_syntax_all\r\n\" Don't autofold code\r\nlet g:pymode_folding = 0\r\nlet g:pymode_run = 1\r\nlet g:pymode_run_bind = '<leader>r'\r\n\" find definition\r\nlet g:pymode_rope_goto_definition_bind = '<C-c>g'\r\nlet g:pymode_rope_goto_definition_cmd = 'new'\r\n\r\n```\u3002", "top": 0, "createdAt": 1712046831, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P4": {"htmlDir": "docs/post/uwsgi-pei-zhi-yi-ji-shi-yong.html", "labels": ["uwsgi"], "postTitle": "uwsgi\u914d\u7f6e\u4ee5\u53ca\u4f7f\u7528", "postUrl": "post/uwsgi-pei-zhi-yi-ji-shi-yong.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/4", "commentNum": 0, "wordCount": 650, "description": "### \u4f7f\u7528\r\n```\r\nuwsgi --ini uwsgi.ini             # \u542f\u52a8\r\nuwsgi --reload uwsgi.pid          # \u91cd\u542f\r\nuwsgi --stop uwsgi.pid            # \u5173\u95ed\r\n```\r\n<!--more-->\r\n### \u914d\u7f6e\r\n```\r\n[uwsgi]\r\nchdir=/opt/   \r\n\r\ncallable=app  #flask\u4e13\u7528\r\nhome=/root/env/\r\nwsgi-file=xdbg/wsgi.py\r\nmaster=true\r\npy-autoreload=1                              # py\u6587\u4ef6\u4fee\u6539\uff0c\u81ea\u52a8\u52a0\u8f7d\r\nprocesses=4\r\nthreads=2\r\n\r\npidfile=%(chdir)/uwsgi.pid\r\nsocket=/socket/uwsgi.sock\r\nchmod-socket = 664\r\nvacuum=true    #\u9000\u51fauwsgi\u662f\u5426\u6e05\u7406\u4e2d\u95f4\u6587\u4ef6\uff0c\u5305\u542bpid\u3001sock\u548cstatus\u6587\u4ef6\r\ndaemonize=%(chdir)/cloudmonitor.log  #\u914d\u5408supervisor\u53bb\u6389\u5e76\u4e14\u6539\u5230stdout_logfile docker\u4e2d\u8981\u53bb\u6389\r\nstatic-map = /static=/opt/static\r\n```\r\n\r\n> \u53c2\u8003 https://www.jianshu.com/p/c3b13b5ad3d7\u3002", "top": 0, "createdAt": 1712046933, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P5": {"htmlDir": "docs/post/Ubuntu-an-zhuang-chrome-jiao-ben.html", "labels": ["\u811a\u672c"], "postTitle": "Ubuntu\u5b89\u88c5chrome\u811a\u672c", "postUrl": "post/Ubuntu-an-zhuang-chrome-jiao-ben.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/5", "commentNum": 0, "wordCount": 278, "description": "---\r\n```Shell\r\n#!/bin/bash\r\napt-get update\r\napt-get install -y libxss1 libappindicator1 libindicator7\r\nwget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\r\ndpkg -i  google-chrome-stable_current_amd64.deb\r\n```\r\n### \u5982\u679c\u62a5\u9519\u4e86\r\n`apt-get install -y -f ` \u5c31OK\ud83d\udc4c\u4e86\u3002", "top": 0, "createdAt": 1712047061, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P7": {"htmlDir": "docs/post/matplotlib-hua-zi-tu-dai-ma-shi-li.html", "labels": ["\u4ee3\u7801\u7247\u6bb5"], "postTitle": "matplotlib\u753b\u5b50\u56fe\u4ee3\u7801\u793a\u4f8b", "postUrl": "post/matplotlib-hua-zi-tu-dai-ma-shi-li.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/7", "commentNum": 0, "wordCount": 1565, "description": "## subplot\u753b\u5b50\u56fe\r\n```python\r\nfor index,n in enumerate(imgName):\r\n    plt.subplot(params[\"batch_size\"],params[\"batch_size\"],index*3+1,title=\"Input\" if index==0 else \"\")\r\n    plt.imshow(x[index].transpose(0,1).transpose(1,2).contiguous())\r\n    plt.axis(\"off\") # \u53bb\u6389 x y\u8f74\r\n    plt.subplot(params[\"batch_size\"],params[\"batch_size\"],index*3+2,title=\"GT)\r\n    plt.imshow(y[index],cmap=\"gray\")\r\n    plt.axis(\"off\")\r\n    plt.subplot(params[\"batch_size\"],params[\"batch_size\"],index*3+3,title=\"Mask\")\r\n    plt.imshow(mask[index],cmap=\"gray\")\r\n    plt.axis(\"off\")\r\n    # plt.subplots_adjust(left=0.027,\r\n    #                     bottom=0,\r\n    #                     right=0.99,\r\n    #                     top=0.93,\r\n    #                     wspace=0.005,\r\n    #                     hspace=0.045)\r\n    fig.tight_layout()\r\n```\r\n\r\n## subplots\u753b\u5b50\u56fe\r\n\r\n```python\r\nfig,axes=plt.subplots(params[\"batch_size\"],params[\"batch_size\"])\r\nfor index,n in enumerate(imgName):\r\n    axes[index,0].imshow(x[index].transpose(0,1).transpose(1,2).contiguous())\r\n    axes[index, 0].axis(\"off\")\r\n    axes[index,1].imshow(y[index],cmap=\"gray\")\r\n    axes[index, 1].axis(\"off\")\r\n    axes[index,2].imshow(mask[index],cmap=\"gray\")\r\n    axes[index, 2].axis(\"off\")\r\n    axes[0,0].set_title(\"Input\")\r\n    axes[0,1].set_title(\"GT\")\r\n    axes[0,2].set_title(\"Mask\")\r\n    plt.subplots_adjust(left=0.027,\r\n                            bottom=0,\r\n                            right=0.99,\r\n                            top=0.93,\r\n                            wspace=0.005,\r\n                            hspace=0.045)\r\n```\r\n\u3002", "top": 0, "createdAt": 1712047342, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P8": {"htmlDir": "docs/post/xue-hua-suan-fa.html", "labels": ["\u4ee3\u7801\u7247\u6bb5"], "postTitle": "\u96ea\u82b1\u7b97\u6cd5", "postUrl": "post/xue-hua-suan-fa.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/8", "commentNum": 0, "wordCount": 1382, "description": "> `7uQJnf1B3NnRjV` \u50cf\u8fd9\u79cd\u63ba\u6742\u6570\u5b57\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\u5c31\u662f\u96ea\u82b1\u7b97\u6cd5\u751f\u6210\u7684\u3002", "top": 0, "createdAt": 1712047391, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P9": {"htmlDir": "docs/post/scrapy-qi-dong-duo-spider.html", "labels": ["\u4ee3\u7801\u7247\u6bb5"], "postTitle": "scrapy\u542f\u52a8\u591aspider", "postUrl": "post/scrapy-qi-dong-duo-spider.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/9", "commentNum": 0, "wordCount": 390, "description": "### \u597d\u4f7f\r\n```Python\r\nimport scrapy\r\nfrom scrapy.crawler import CrawlerProcess\r\nfrom scrapy.utils.project import get_project_settings\r\nprocess = CrawlerProcess(get_project_settings())\r\n# \u6307\u5b9a\u591a\u4e2aspider\r\nprocess.crawl(\"fen\")\r\nprocess.crawl(\"fuck\")\r\n# \u6267\u884c\u6240\u6709 spider\r\n# for spider_name in process.spider_loader.list():\r\n#     print(spider_name)\r\n    # process.crawl(spider_name)\r\nprocess.start()\r\n\r\n```\u3002", "top": 0, "createdAt": 1712047427, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P10": {"htmlDir": "docs/post/redis-mian-shi-wen-ti.html", "labels": ["\u9762\u7ecf"], "postTitle": "redis\u9762\u8bd5\u95ee\u9898", "postUrl": "post/redis-mian-shi-wen-ti.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/10", "commentNum": 0, "wordCount": 1443, "description": "# \u5feb\u7684\u539f\u56e0\r\n\r\n1. \u57fa\u4e8e\u5185\u5b58\u5b9e\u73b0\u7684\r\n2. \u91c7\u7528io\u591a\u8def\u590d\u7528\u6a21\u578b\u3002", "top": 0, "createdAt": 1712047556, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P11": {"htmlDir": "docs/post/QtNetwork-he-QtTableview-de-shi-yong.html", "labels": ["Qt"], "postTitle": "QtNetwork\u548cQtTableview\u7684\u4f7f\u7528", "postUrl": "post/QtNetwork-he-QtTableview-de-shi-yong.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/11", "commentNum": 0, "wordCount": 3048, "description": "## Qt Network\r\n\r\n1. \u540c\u6b65\u8bf7\u6c42\u6570\u636e\r\n\r\n   ```c++\r\n   QNetworkAccessManager *mgr = new QNetworkAccessManager(this);\r\n   const QUrl url(QStringLiteral(\"http://myserver.com/api\"));\r\n   QNetworkRequest request(url);\r\n   request.setHeader(QNetworkRequest::ContentTypeHeader, \"application/json\");\r\n   \r\n   QJsonObject obj;\r\n   obj[\"key1\"] = \"value1\";\r\n   obj[\"key2\"] = \"value2\";\r\n   QJsonDocument doc(obj);\r\n   QByteArray data = doc.toJson();\r\n   // or\r\n   // QByteArray data(\"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":\\\"value2\\\"}\");\r\n   QNetworkReply *reply = mgr->post(request, data);\r\n   \r\n   QObject::connect(reply, &QNetworkReply::finished, [=](){\r\n       if(reply->error() == QNetworkReply::NoError){\r\n           QString contents = QString::fromUtf8(reply->readAll());\r\n           qDebug() << contents;\r\n       }\r\n       else{\r\n           QString err = reply->errorString();\r\n           qDebug() << err;\r\n       }\r\n       reply->deleteLater();\r\n   });\r\n   ```\r\n\r\n* TableView \u521d\u59cb\u5316\r\n\r\n```c++\r\nvoid myc::setTableHead()\r\n{\r\n    if(ui->tableView->model()==nullptr){\r\n      QStandardItemModel *  theModel = new QStandardItemModel(ui->tableView);\r\n      ui->tableView->setModel(theModel);\r\n   \t\t }\r\n    QStandardItemModel * theModel = (QStandardItemModel*) ui->tableView->model();\r\n\t theSelection = new QItemSelectionModel(theModel);//\u9009\u4e2d\u6a21\u578b\u7c7b \u4eceui\u4e2d\u83b7\u53d6 \u800c\u4e0d\u662f\u8bbe\u7f6e\u7c7b\u6210\u5458\r\n\t ui->tableView->setSelectionModel(theSelection);\r\n    QStringList headerList;\r\n    headerList<<\"\u5e8f\u53f7\"<<\"\u62a5\u544a\u7f16\u53f7\"<<\"\u59d3\u540d\"<<\"\u6027\u522b\"<<\"\u521b\u5efa\u65f6\u95f4\";\r\n    theModel->setHorizontalHeaderLabels(headerList);\r\n    theModel->setRowCount(5);  //\u8bbe\u7f6e\u8868\u683c\u884c\u6570 \r\n    ui->tableView->setGridStyle(Qt::SolidLine);\r\n    ui->tableView->horizontalHeader()->setStretchLastSection(true);\r\n    ui->tableView->horizontalHeader()->setSectionResizeMode(QHeaderView::ResizeToContents);\r\n    ui->tableView->verticalHeader()->setVisible(true);   // \u662f\u5426\u9690\u85cf\u5217\u8868\u5934\r\n    ui->tableView->setEditTriggers(QAbstractItemView::NoEditTriggers); //\u662f\u5426\u53ef\u7f16\u8f91 cell\r\n    ui->tableView->setContextMenuPolicy(Qt::CustomContextMenu);    //\u5f39\u51fa\u53f3\u952e\u83dc\u5355\u7b56\u7565\r\n    ui->tableView->setSelectionBehavior(QAbstractItemView::SelectRows); //\u4e00\u9009\u5c31\u9009\u62e9\u6574\u884c\r\n    ui->tableView->setSelectionMode(QAbstractItemView::SingleSelection); //\u53ea\u9009\u62e9\u4e00\u884c/\u591a\u884c\r\n}\r\n```\r\n\r\n* \u6dfb\u52a0\u4e00\u884c\u6570\u636e\r\n\r\n  ```c++\r\n  void myc::querybtn_clicked()\r\n  {\r\n      \r\n      QStandardItemModel * theModel = (QStandardItemModel*)ui->tableView->model();\r\n      int start= theModel->rowCount();  // \u6709start\u4e5f\u5c31\u662f\u4ece\u8868\u683c\u73b0\u6709\u7684\u884c\u6570\u4e0b\u4e00\u4e2a\u5f00\u59cb\r\n      QString sql =  QString(\"select * from patients\");\r\n      QList<QList<QVariant>> query_list = con->dbquery(sql);\r\n      for(int i=0;i<query_list.length();i++){\r\n          QList<QStandardItem*> ItemList;\r\n          ItemList<<(new QStandardItem(query_list[i][0].toString()));\r\n          ItemList<<(new QStandardItem(query_list[i][1].toString()));\r\n          ItemList<<(new QStandardItem(query_list[i][2].toString()));\r\n          ItemList<<(new QStandardItem(query_list[i][3].toString()==\"0\"?\"\u5973\":\"\u7537\"));\r\n          ItemList<<(new QStandardItem(query_list[i][4].toString()));\r\n          theModel->insertRow(i+start,ItemList);  // \u63d2\u5165\r\n      }\r\n  \r\n  ```\u3002", "top": 0, "createdAt": 1712047771, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P12": {"htmlDir": "docs/post/Python-cao-zuo-excel-openpyxl.html", "labels": ["\u4ee3\u7801\u7247\u6bb5"], "postTitle": "Python\u64cd\u4f5cexcel-openpyxl", "postUrl": "post/Python-cao-zuo-excel-openpyxl.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/12", "commentNum": 0, "wordCount": 1266, "description": "> openpyxl\u662f\u4e00\u4e2a\u5f88\u597d\u7528\u7684\u64cd\u4f5cexcel\u7684\u5e93\r\n> \r\n> \u5e38\u7528\u7684\u64cd\u4f5c\uff1a\r\n> \r\n>  * \u6dfb\u52a0\u8868\u5934 **add_sheet**\r\n>  * \u6dfb\u52a0\u6570\u636e(\u5143\u7ec4) **add_data**\r\n>  * \u8bbe\u7f6e\u8868\u5934\u683c\u5f0f(\u4ec5\u5b57\u4f53)  **set_header_font**\r\n>  * \u5220\u9664 **sheet delete_sheet**\r\n>  * \u4fdd\u5b58excel **save**\r\n> \r\n> \u8fd8\u6709\u5f88\u591a\u53cb\u597d\u7684\u64cd\u4f5c\r\n\r\n```Python\r\nclass Xlsx():\r\n    def __init__(self):\r\n        self.workbook = Workbook()\r\n        self.index=1\r\n        pass\r\n\r\n    def add_sheet(self,sheetname=\"Sheet\"):\r\n        return self.workbook.create_sheet(sheetname,self.index+1)\r\n\r\n    def add_data(self,data,sheet=\"Sheet\"):\r\n        '''\r\n        :param sheet :sheet\u5bf9\u8c61\r\n        :param data: data\u6700\u597d\u662f\u4e00\u4e2a\u5143\u7ec4\r\n        :return:\r\n        '''\r\n        if isinstance(data,tuple):\r\n            sheet.append(data)\r\n        else:\r\n            sheet.append(tuple(data))\r\n\r\n    def set_header_font(self,sheetname=\"Sheet\"):\r\n        '''\r\n        \u683c\u5f0f\u5316\u884c\u5934\r\n        :param sheetname:\r\n        :return:\r\n        '''\r\n        font = Font(u'\u5b8b\u4f53', size=13, bold=True, color='000000')\r\n        for i in sheetname[\"1\"]:\r\n            i.font = font\r\n            \r\n    def delete_sheet(self,sheetname=\"Sheet\"):\r\n        '''\r\n        \u5220\u9664sheet\r\n        :param sheetname:\r\n        :return:\r\n        '''\r\n        self.workbook.remove(self.workbook[sheetname])\r\n\r\n    def save(self,filename):\r\n        self.workbook.save(filename)\r\n```\u3002", "top": 0, "createdAt": 1712047809, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P13": {"htmlDir": "docs/post/sheng-chan-zhe-xiao-fei-zhe-mo-shi-cai-ji-gu-ge-xue-shu-shi-li.html", "labels": ["\u4ee3\u7801\u7247\u6bb5"], "postTitle": "\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u5f0f\u91c7\u96c6\u8c37\u6b4c\u5b66\u672f\u793a\u4f8b", "postUrl": "post/sheng-chan-zhe-xiao-fei-zhe-mo-shi-cai-ji-gu-ge-xue-shu-shi-li.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/13", "commentNum": 0, "wordCount": 10076, "description": "\u5de5\u4f5c\u793a\u610f\u56fe\u5982\u4e0b\uff1a\r\n\r\n![text-here](https://i.loli.net/2020/05/18/qGjnJFP9pu8KQoM.png)\r\n\r\n\r\n\u51d1\u5408\u770b\r\n\r\n<!--more-->\r\n\r\n```Python\r\n\r\nimport re\r\nimport redis\r\nimport requests\r\nimport retrying\r\nfrom threading import Thread\r\nfrom openpyxl.workbook import Workbook\r\nfrom urllib.request import urljoin\r\nfrom scrapy.selector import Selector\r\nfrom concurrent.futures import ThreadPoolExecutor, as_completed\r\nfrom queue import Queue,Empty\r\n\r\nr = redis.Redis(\"127.0.0.1\", db=0)\r\nq = Queue(maxsize=100)\r\n\r\nproxies = {\r\n    \"http\": \"http://127.0.0.1:1087\",\r\n    \"https\": \"http://127.0.0.1:1087\"\r\n}\r\nheaders = {\r\n    'authority': 'scholar.google.com',\r\n    'cache-control': 'no-cache',\r\n    'upgrade-insecure-requests': '1',\r\n    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.122 Safari/537.36',\r\n    'accept': 'image/webp,image/apng,image/*,*/*;q=0.8',\r\n    'x-client-data': 'CJS2yQEIo7bJAQjBtskBCKmdygEI0K/KAQi8sMoBCO21ygEIjrrKAQjmxsoB',\r\n    'sec-fetch-site': 'same-origin',\r\n    'sec-fetch-mode': 'no-cors',\r\n    'sec-fetch-user': '?1',\r\n    'sec-fetch-dest': 'empty',\r\n    'referer': 'https://scholar.google.com/scholar?start=20&hl=en&as_sdt=2005&sciodt=0,5&cites=9023096709689140743&scipsc=',\r\n    'accept-language': 'zh-CN,zh;q=0.9',\r\n    'Referer': 'https://scholar.google.com/scholar?start=20&hl=en&as_sdt=2005&sciodt=0,5&cites=9023096709689140743&scipsc=',\r\n    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.122 Safari/537.36',\r\n    'pragma': 'no-cache',\r\n    'cookie': r.get(\"cookies\").decode(\"ASCII\"),\r\n}\r\n\r\n\r\ndef try_if_ssl_error(exception):\r\n    if isinstance(exception, (\r\n            requests.exceptions.SSLError, requests.exceptions.ProxyError, requests.exceptions.ReadTimeout,\r\n            requests.exceptions.ConnectionError)):\r\n        print(f\"\u4ee3\u7406\u53ef\u80fd\u5931\u6548 {exception}\")\r\n        return True\r\n    print(f\"\u610f\u6599\u4e4b\u5916\u9519\u8bef {exception}\")\r\n    return False\r\n\r\n\r\ndef try_if_robot(result):\r\n    if \"you're not a robot\" in result.text or \"\u4eba\u673a\u8eab\u4efd\u9a8c\u8bc1\" in result.text:\r\n        print(\"\u51fa\u73b0 Robot \u68c0\u6d4b\")\r\n        headers[\"cookie\"] = r.get(\"cookies\").decode(\"ASCII\")\r\n        return True\r\n    if \"detected unusual traffic\" in result.text or \"\u5f02\u5e38\u6d41\u91cf\" in result.text:\r\n        print(\"\u51fa\u73b0 \u6d41\u91cf \u68c0\u6d4b\")\r\n        headers[\"cookie\"] = r.get(\"cookies\").decode(\"ASCII\")\r\n        return True\r\n    if \"sending automated queries\" in result.text:\r\n        headers[\"cookie\"] = r.get(\"cookies\").decode(\"ASCII\")\r\n        print(\" your computer or network may be sending automated queries\")\r\n        return True\r\n    if \"/recaptcha/api.js\" in result.text:\r\n        headers[\"cookie\"] = r.get(\"cookies\").decode(\"ASCII\")\r\n        print(\"\u51fa\u73b0 \u9a8c\u8bc1\u7801 \u68c0\u6d4b \")\r\n        return True\r\n    return False\r\n\r\n\r\n@retrying.retry(stop_max_attempt_number=500, retry_on_result=try_if_robot, retry_on_exception=try_if_ssl_error,\r\n                wait_fixed=10000)\r\ndef fetch(**kwargs):\r\n    \"\"\"\r\n    :param kwargs:  start cites\r\n    :return:\r\n    \"\"\"\r\n    url = kwargs.get(\"url\")\r\n    response = requests.get(url, headers=headers, proxies=proxies, timeout=7)\r\n    return response\r\n\r\n\r\nclass Proceser():\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        filename = kwargs.get(\"filename\")\r\n        with open(filename, \"r\") as f:\r\n            self.data = f.readlines()\r\n        self.t = ThreadPoolExecutor(max_workers=2)\r\n        pass\r\n\r\n    def _proc(self, kw):\r\n        \"\"\"\r\n\r\n        :param kw:\r\n        :return:\r\n        \"\"\"\r\n        kw = '+'.join(kw.split(\" \"))\r\n        url = f\"/scholar?q={kw}\"\r\n        base_url = \"https://scholar.google.com/scholar\"\r\n        url = urljoin(base_url, url)\r\n        url = url.replace(\"zh-CN\", \"en\")\r\n        res = fetch(url=url)\r\n        return {\"res\": res, \"kw\": kw}\r\n\r\n    def callback(self, result):\r\n        result = result.result()\r\n        res = result.get(\"res\")\r\n        kw = result.get(\"kw\")\r\n        seed_infos = self.extract(res, seed=True)\r\n        for seed_info in seed_infos:\r\n            seed_cites = seed_info.get(\"cites\", 0)\r\n            try:\r\n                seed_cites = int(seed_cites)\r\n            except ValueError as e:\r\n                print(f\"Cites ERROR:{res.url}\")\r\n            else:\r\n                for start in range(0, seed_cites, 20):\r\n                    cite_url = \"https://scholar.google.com\"+seed_info[\"cites_url\"] + f\"&num=20&start={start}\"\r\n                    q.put({\r\n                        \"kw\": kw,\r\n                        \"seed_title\": seed_info[\"title\"],\r\n                        \"seed_cites\": seed_info[\"cites\"],\r\n                        \"cite_url\": cite_url,\r\n                    })\r\n\r\n    def run(self):\r\n        tasks = [self.t.submit(self._proc, kw) for kw in self.data]\r\n        for task in as_completed(tasks):\r\n            self.callback(task)\r\n\r\n    @staticmethod\r\n    def extract(response, seed=False):\r\n        def _proc_cites(cites):\r\n            return ''.join(re.findall(r'(\\d{0,5})', cites))\r\n\r\n        def _proc_info(info):\r\n            publish = ''.join(re.findall(r'-(.*?)-', info)).replace(\"\u2026\", \"\").replace(\"\\xa0\", \"\")\r\n            author = ''.join(re.findall(r'(.*?)-', info)).replace(\"\u2026\", \"\").replace(\"\\xa0\", \"\")\r\n            return publish, author\r\n\r\n        if not \"did not match any articles\" in response.text:\r\n            html = Selector(response)\r\n            if seed:\r\n                documents = [html.xpath(\"//div[@id='gs_res_ccl_mid']/div\")[0]]\r\n            else:\r\n                documents = html.xpath(\"//div[@id='gs_res_ccl_mid']/div\")\r\n            infos = []\r\n            for document in documents:\r\n                title = document.xpath(\r\n                    \"string(.//div[contains(@class,'gs_ri')]/h3/a|.//div[contains(@class,'gs_ri')]/h3/span[2])\").extract_first(\r\n                    default=\"\")\r\n                url = document.xpath(\".//div[contains(@class,'gs_ri')]/h3/a/@href\").extract_first(default=\"\")\r\n                info = document.xpath(\"string(.//div[contains(@class,'gs_ri')]/div[@class='gs_a'])\").extract_first(\r\n                    default=\"\")\r\n                cites_url = document.xpath(\".//div[contains(@class,'gs_fl')]/a[3]/@href\").extract_first(default=\"\")\r\n                cites = document.xpath(\".//div[contains(@class,'gs_fl')]/a[3]/text()\").extract_first(default=\"\")\r\n                cites = _proc_cites(cites)\r\n                publish, author = _proc_info(info)\r\n                infos.append(\r\n                    {\"title\": title, \"publish\": publish, \"author\": author, \"cites_url\": cites_url, \"cites\": cites,\r\n                     \"url\": url})\r\n            return infos\r\n\r\n\r\nclass Customer():\r\n    def __init__(self,savefilename):\r\n        self.savefilename=savefilename\r\n        self.t = ThreadPoolExecutor(max_workers=100)\r\n        self.workbook = Workbook()\r\n        self.sheet = self.workbook[\"Sheet\"]\r\n        self.sheet.append((\"\u5173\u952e\u8bcd\u6587\u4ef6\u540d\", \"\u7b2c\u4e00\u5339\u914d\u7ed3\u679c\u6587\u732e\", \"\u672c\u6587\u88ab\u5f15\u7528\u6570\", \"\u5f15\u7528\u6b64\u6587\u6587\u732e\u540d\", \"\u5f15\u7528\u6b64\u6587\u4f5c\u8005\", \"\u5f15\u7528\u6b64\u6587\u671f\u520a\u540d\", \"\u5f15\u7528\u6b64\u6587\u6587\u732e\u5f15\u7528\u6570\", \"url\"))\r\n\r\n    @staticmethod\r\n    def extract(response, seed=False):\r\n        def _proc_cites(cites):\r\n            return ''.join(re.findall(r'(\\d{0,5})', cites))\r\n\r\n        def _proc_info(info):\r\n            publish = ''.join(re.findall(r'-(.*?)-', info)).replace(\"\u2026\", \"\").replace(\"\\xa0\", \"\")\r\n            author = ''.join(re.findall(r'(.*?)-', info)).replace(\"\u2026\", \"\").replace(\"\\xa0\", \"\")\r\n            return publish, author\r\n\r\n        if not \"did not match any articles\" in response.text:\r\n            html = Selector(response)\r\n            if seed:\r\n                documents = [html.xpath(\"//div[@id='gs_res_ccl_mid']/div\")[0]]\r\n            else:\r\n                documents = html.xpath(\"//div[@id='gs_res_ccl_mid']/div\")\r\n            infos = []\r\n            for document in documents:\r\n                title = document.xpath(\r\n                    \"string(.//div[contains(@class,'gs_ri')]/h3/a|.//div[contains(@class,'gs_ri')]/h3/span[2])\").extract_first(\r\n                    default=\"\")\r\n                url = document.xpath(\".//div[contains(@class,'gs_ri')]/h3/a/@href\").extract_first(default=\"\")\r\n                info = document.xpath(\"string(.//div[contains(@class,'gs_ri')]/div[@class='gs_a'])\").extract_first(\r\n                    default=\"\")\r\n                cites_url = document.xpath(\".//div[contains(@class,'gs_fl')]/a[3]/@href\").extract_first(default=\"\")\r\n                cites = document.xpath(\".//div[contains(@class,'gs_fl')]/a[3]/text()\").extract_first(default=\"\")\r\n                cites = _proc_cites(cites)\r\n                publish, author = _proc_info(info)\r\n                infos.append(\r\n                    {\"title\": title, \"publish\": publish, \"author\": author, \"cites_url\": cites_url, \"cites\": cites,\r\n                     \"url\": url})\r\n            return infos\r\n\r\n    def get_infos(self):\r\n        print(f\"Queue size is {q.qsize()}\")\r\n        try:\r\n            infos = q.get(block=True,timeout=180)\r\n            return infos\r\n        except Empty:\r\n            print(f\"Queue size is {q.qsize()}\")\r\n            print(\"\u961f\u52170000000\u7ed3\u675f\u4e86\uff01\")\r\n            self.workbook.save(self.savefilename)\r\n\r\n    def run(self):\r\n        infos = self.get_infos()\r\n        while infos:\r\n            self.t.submit(self._fe, infos=infos).add_done_callback(self.callback)\r\n            infos = self.get_infos()\r\n\r\n    def _fe(self, infos):\r\n        url = infos.get(\"cite_url\")\r\n        res = fetch(url=url)\r\n        cite_infos = self.extract(res)\r\n        for cite_info in cite_infos:\r\n            cite_info.update(infos)\r\n        return cite_infos\r\n\r\n    def callback(self, result):\r\n        cite_infos = result.result()\r\n        print(f\"\u6dfb\u52a0\u6587\u732e{len(cite_infos)}\")\r\n        for infos in cite_infos:\r\n            self.sheet.append((\r\n                infos.get(\"kw\"), infos.get(\"seed_title\"), infos.get(\"seed_cites\"), infos.get(\"title\"), infos.get(\"author\"), infos.get(\"publish\"), infos.get(\"cites\"),infos.get(\"url\")\r\n            ))\r\n\r\nif __name__ == '__main__':\r\n    pr=Proceser(filename=\"again.txt\")\r\n    cu=Customer(savefilename=\"test.xlsx\")\r\n    t1=Thread(target=pr.run)\r\n    t2=Thread(target=cu.run)\r\n    t1.start()\r\n    t2.start()\r\n    t1.join()\r\n    t2.join()\r\n```\u3002", "top": 0, "createdAt": 1712047882, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P14": {"htmlDir": "docs/post/one-hot-bian-ma-de-san-zhong-shi-xian-fang-fa.html", "labels": ["\u4ee3\u7801\u7247\u6bb5"], "postTitle": "one-hot\u7f16\u7801\u7684\u4e09\u79cd\u5b9e\u73b0\u65b9\u6cd5", "postUrl": "post/one-hot-bian-ma-de-san-zhong-shi-xian-fang-fa.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/14", "commentNum": 0, "wordCount": 1250, "description": "## label\u8f6cone_hot\u7f16\u7801\u7684\u65b9\u6cd5\r\n\r\n1. \u5e38\u89c1\u7684\u662f\u7528numpy\u7684\u65b9\u6cd5\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\r\n\r\n   ```python\r\n    y= cv2.imread(maskPath,cv2.IMREAD_GRAYSCALE)\r\n    y= cv2.resize(y,(self.image_size,self.image_size))\r\n    y[y<=100]=0  #\u80cc\u666f\u7c7b\r\n    y[y>100]=1   #\u75c5\u7076\u7c7b\r\n    y_onehot=np.eye(self.num_classes)[y.reshape([-1])]\r\n    # \u5230\u7b2c\u4e94\u884c\u5176\u5b9e\u5df2\u7ecf\u6210\u4e3aone_hot\u7f16\u7801\u4e86,\u683c\u5f0f\u4e3a  [[1,0],[1,0],[1,0],[1,0],[1,0],...[0,1],]\r\n    y_onehot=y_onehot.reshape(self.num_classes,self.image_size,self.image_size)\r\n    # \u8fd9\u4e00\u6b65\u662f\u4e3areshape\uff0c\u4f46\u662f\u8fd9\u79cdreshape\u65b9\u5f0f\u7684\u7ed3\u679c\u5448\u73b0\u5e76\u4e0d\u662f\u76f4\u89c9\u7406\u89e3\u7684\uff08\u4e0d\u662f\u901a\u9053\u503c\u4e92\u65a5\u7684\uff09\uff0c\u539f\u56e0\u662f\u56e0\u4e3areshape\u7684\u539f\u7406\r\n    # \u6b63\u786e\u7684\u5e94\u8be5\u662f\r\n    y_onehot = rearrange(y_onehot,\"(h w) c->c h w\",h=self.image_size)\r\n   ```\r\n\r\n2. pytorch\u4e5f\u6709one_hot\u7f16\u7801\u65b9\u6cd5\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\r\n\r\n   ```python\r\n   from torch.nn.functional as F\r\n   y= cv2.imread(self.Y[index],cv2.IMREAD_GRAYSCALE)\r\n   y= cv2.resize(y,(self.image_size,self.image_size))\r\n   y[y<=100]=0  #\u80cc\u666f\u7c7b\r\n   y[y>100]=1   #\u75c5\u7076\u7c7b\r\n   # y\u5c31\u662f\u56fe\u7247\u7684label\r\n   \r\n   y_onehot=F.one_hot(torch.Tensor(y.reshpe(-1).to(torch.int64)),num_classes)\r\n   # \u8fd9\u4e00\u6b65\u7ed3\u679c\u662fone_hot\u5f62\u5f0f\u4e86\uff0c\u4e0b\u4e00\u6b65\u9700\u8981\u53d8\u6362shape\u5c31\u884c\r\n   # \u6ce8\u610f\u7b2c\u4e00\u4e2a\u53c2\u6570\u662fTensor\u7c7b\u578b\u5e76\u4e14\u8981\u8f6c\u4e3atorch.int64\r\n   y_onehot = rearrange(y_onehot,\"(h w) c->c h w\",h=self.image_size)\r\n   ```\r\n\r\n3. keras\u4e5f\u6709one_host\u7f16\u7801\u65b9\u6cd5\uff0c\u968f\u540e\u8865\u5145\r\n\r\n   ```python\r\n   from keras.utils import to_categorical\r\n   intput=np.array([1,2,3,4])\r\n   y_onehot=to_categorical(input)\r\n   ```\u3002", "top": 0, "createdAt": 1712047933, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P15": {"htmlDir": "docs/post/Mysql-zhu-cong-pei-zhi-ji-ke-neng-wen-ti.html", "labels": ["mysql"], "postTitle": "Mysql\u4e3b\u4ece\u914d\u7f6e\u53ca\u53ef\u80fd\u95ee\u9898", "postUrl": "post/Mysql-zhu-cong-pei-zhi-ji-ke-neng-wen-ti.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/15", "commentNum": 0, "wordCount": 1686, "description": "---\r\n### \u4ece\u8d26\u53f7\r\n```\r\ngrant replication slave on *.* to slave@192.168.1.8 identified by '123456';\r\n```\r\n### my.cnf\r\n<!--more-->\r\n```\r\n[mysqld]\r\nport = 3306\r\ndatadir = /data\r\nlog_bin = /data/master-log-bin\r\nlog_bin_index = /data/master-log-bin.index\r\nsocket = /tmp/mysql.sock\r\nexpire_logs_days = 3\r\n<!--more-->\r\nopen_files_limit = 10000\r\nbinlog_format =mixed \r\n# \u5f88\u91cd\u8981\r\nserver_id = 2\r\nlog_error = /data/log/master-error.log\r\n\r\nlower_case_table_names=1\r\nslave_type_conversions=ALL_NON_LOSSY\r\n#\u4ece\r\nslave-skip-errors =1756  \r\nauto_increment_offset = 2\r\nauto_increment_increment = 2\r\nmax_connections = 500\r\ncharacter-set-server = utf8mb4\r\nwait_timeout = 120\r\n#GTID\u914d\u7f6e\r\ngtid_mode = on\r\n#\u5fc5\u987b\r\nenforce-gtid-consistency = true\r\nbinlog-do-db = shares3\r\n\r\nlog_slave_updates = on\r\n\r\nslave-parallel-workers=0\r\nmaster-info-repository = table\r\nrelay-log-info-repository = table\r\n\r\n[mysql]\r\nsocket = /tmp/mysql.sock\r\n```\r\n\r\n*  \u6570\u636e\u51b2\u7a81\u4e4b\u5217\u7684\u590d\u5236\u9519\u8bef\uff0c\u81f3\u4e8e\u8df3\u8fc7\u4e8b\u7269Id\u672c\u8eab\uff0c\u5c31\u4e0d\u590d\u6742\u4e86\u3002", "top": 0, "createdAt": 1712048038, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P16": {"htmlDir": "docs/post/mitmproxy-jiao-ben-chang-yong-jie-kou.html", "labels": ["\u4ee3\u7801\u7247\u6bb5"], "postTitle": "mitmproxy\u811a\u672c\u5e38\u7528\u63a5\u53e3", "postUrl": "post/mitmproxy-jiao-ben-chang-yong-jie-kou.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/16", "commentNum": 0, "wordCount": 1119, "description": "```\r\nhttp.HTTPFlow \u5b9e\u4f8b flow\r\nflow.request.headers #\u83b7\u53d6\u6240\u6709\u5934\u4fe1\u606f\uff0c\u5305\u542bHost\u3001User-Agent\u3001Content-type\u7b49\u5b57\u6bb5\r\nflow.request.url #\u5b8c\u6574\u7684\u8bf7\u6c42\u5730\u5740\uff0c\u5305\u542b\u57df\u540d\u53ca\u8bf7\u6c42\u53c2\u6570\uff0c\u4f46\u662f\u4e0d\u5305\u542b\u653e\u5728body\u91cc\u9762\u7684\u8bf7\u6c42\u53c2\u6570\r\nflow.request.pretty_url #\u540cflow.request.url\u76ee\u524d\u6ca1\u770b\u51fa\u4ec0\u4e48\u5dee\u522b\r\nflow.request.host #\u57df\u540d\r\nflow.request.method #\u8bf7\u6c42\u65b9\u5f0f\u3002", "top": 0, "createdAt": 1712048094, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P17": {"htmlDir": "docs/post/itertools-ku-shi-xian-pai-lie- -zu-he- -di-qia-er-ji.html", "labels": ["\u4ee3\u7801\u7247\u6bb5"], "postTitle": "itertools\u5e93\u5b9e\u73b0\u6392\u5217 \u7ec4\u5408 \u7b1b\u5361\u5c14\u79ef", "postUrl": "post/itertools-ku-shi-xian-pai-lie-%20-zu-he-%20-di-qia-er-ji.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/17", "commentNum": 0, "wordCount": 708, "description": "# \u6392\u5217 (itertools.permutations)\r\n\r\n\u4ece\u8fed\u4ee3\u5e8f\u5217\u91cc\u9009\u53d6n\u4e2a\u6570\u5b57\u8fdb\u884c\u6392\u5217\uff0c\u6709\u987a\u5e8f\r\n\r\n```python\r\na=[1,3,4]\r\nlist(itertools.permutations(a,2))\r\n[(4, 1), (4, 3), (1, 4), (1, 3), (3, 4), (3, 1)]\r\n\r\nlist(itertools.permutations(a,3))\r\nOut[36]: [(4, 1, 3), (4, 3, 1), (1, 4, 3), (1, 3, 4), (3, 4, 1), (3, 1, 4)]\r\n```\r\n\r\n## \u7ec4\u5408(itertools.combinations)\r\n\r\n\u4ece\u8fed\u4ee3\u5e8f\u5217\u91cc\u9009\u53d6n\u4e2a\u6570\u5b57\u8fdb\u884c\u7ec4\u5408\uff0c\u91cd\u5728\u7ec4\u5408\r\n\r\n```python\r\na=[1,3,4]\r\nlist(itertools.combinations(a,2))\r\nOut[32]: [(4, 1), (4, 3), (1, 3)]\r\n\r\nlist(itertools.combinations_with_replacement(a,2))\r\nOut[33]: [(4, 4), (4, 1), (4, 3), (1, 1), (1, 3), (3, 3)]  #\u53ef\u91cd\u590d\u5229\u7528\u6570\u5b57\r\n```\r\n\r\n## \u7b1b\u5361\u5c14\u79ef(itertools.product)\r\n\r\n\u5bf9\u591a\u4e2a\u8fed\u4ee3\u5668\u8fdb\u884c\u7b1b\u5361\u5c14\u79ef\u7ec4\u5408\uff0c\u53c2\u6570\u7684\u610f\u601d\u662f\u4ece\u6bcf\u4e2a\u8fed\u4ee3\u5668\u4e2d\u9009\u53d6\u51e0\u4e2a\u503c\u8fdb\u884c\u7ec4\u5408\r\n\r\n```\r\na=[1,3,4]\r\nlist(itertools.product([1,2,3],[2,3,4],repeat=2))\r\n```\r\n\u3002", "top": 0, "createdAt": 1712048170, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P18": {"htmlDir": "docs/post/logging-ku-tian-jia-Handler.html", "labels": ["\u4ee3\u7801\u7247\u6bb5"], "postTitle": "logging\u5e93\u6dfb\u52a0Handler", "postUrl": "post/logging-ku-tian-jia-Handler.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/18", "commentNum": 0, "wordCount": 1343, "description": "### logging\u5e38\u7528\u914d\u7f6e\r\n```Python\r\n    logger = logging.getLogger('what')\r\n    logger.setLevel(logging.INFO)\r\n    #\u8bbe\u7f6e\u65e5\u5fd7\u683c\u5f0f\r\n    formater=logging.Formatter(fmt='%(name)s %(asctime)s %(filename)s [line:%(lineno)d] %(levelname)s : %(message)s ',datefmt='%Y/%m/%d %H:%M')\r\n    #\u6587\u4ef6Handler\r\n    fh=logging.FileHandler('test.log','a',encoding='utf-8')\r\n    fh.setLevel(logging.ERROR)\r\n    fh.setFormatter(formater)\r\n    #\u81ea\u5b9a\u4e49Handler\r\n    th=CustomHandler()\r\n    th.setFormatter(formater)\r\n    th.setLevel(logging.INFO)\r\n    #\u7ec8\u7aefHandler\r\n    ch = logging.StreamHandler()\r\n    ch.setLevel(logging.INFO)\r\n    ch.setFormatter(formater)\r\n    #\u6dfb\u52a0Handler\r\n    logger.addHandler(fh)\r\n    logger.addHandler(ch)\r\n    logger.addHandler(th)\r\n```\r\n### \u81ea\u5b9a\u4e49Hander\r\n```Python\r\nclass CHandler(logging.Handler):\r\n    def __init__(self):\r\n        logging.Handler.__init__(self)\r\n        self.client=pymysql.Connection(host='127.0.0.1',user='root',passwd='qweqwe',db='sharesnews',charset='utf8mb4',autocommit=True)\r\n        self.cursor=self.client.cursor()\r\n    def emit(self, record):\r\n        try:\r\n            sql='insert into exceptions (exception,add_time) VALUES (%s,%s)'\r\n            msg = sql.format(record)\r\n            self.cursor.execute(sql,(msg,datetime.now()))\r\n        except Exception:\r\n            self.handleError(record)\r\n            self.client.rollback()\r\n```\u3002", "top": 0, "createdAt": 1712048211, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P19": {"htmlDir": "docs/post/Linux-xia-da-bao-QT-cheng-xu.html", "labels": ["Qt"], "postTitle": "Linux\u4e0b\u6253\u5305QT\u7a0b\u5e8f", "postUrl": "post/Linux-xia-da-bao-QT-cheng-xu.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/19", "commentNum": 0, "wordCount": 1144, "description": "1. \u8fd8\u662f\u5148Release\u7f16\u8bd1\u7a0b\u5e8f\r\n\r\n2. \u5c06\u53ef\u6267\u884c\u7a0b\u5e8f\u590d\u5236\u5230\u4e00\u4e2a\u65b0\u76ee\u5f55 src\r\n\r\n3. \u65b0\u5efa\u4e00\u4e2a\u811a\u672c**copylib.sh**\uff0c\u4e3b\u8981\u7528\u6765 copy \u76f8\u5173\u5e93\u7684,**\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u53ef\u6267\u884c\u6587\u4ef6**\r\n\r\n   ```\r\n   #!/bin/bash\r\n   \r\n   LibDir=$PWD\"/lib\"\r\n   Target=$1\r\n   \r\n   lib_array=($(ldd $Target | grep -o \"/.*\" | grep -o \"/.*/[^[:space:]]*\"))\r\n   \r\n   $(mkdir $LibDir)\r\n   \r\n   for Variable in ${lib_array[@]}\r\n   do\r\n       cp \"$Variable\" $LibDir\r\n   done\r\n   ```\r\n\r\n4. \u5148 copy \u7a0b\u5e8f\u4f9d\u8d56\u5e93\uff0c`copylib.sh ISTSC`\uff0c\u5c06 lib \u4e0b\u7684\u5e93\u590d\u5236\u51fa\u6765\r\n\r\n5. \u518d copy qt \u8fd0\u884c\u4f9d\u8d56\u5e93;\r\n\r\n   \u8fdb\u5165qt\u5e73\u53f0\u76ee\u5f55\u4e0b `/opt/Qt/5.15.2/gcc_64/plugins/platforms`\r\n\r\n   \u8fd0\u884c`copylib.sh libqxcb.so`\r\n\r\n   copy lib\u4e0b\u7684\u5e93\u5230src\u4e2d\r\n   copy platforms\u76ee\u5f55\u4e0b\u5176\u4ed6\u5e93\u5230src\r\n   \r\n6. COPY mysql\u7684\u5e93 `sqldrivers/libqsql.so`\u548c `/usr/lib/x86_64-linux-gnu/libmysqlclient.so \u5230src`\r\n   \r\n7. copy qml\u4e0b\u7684\u6240\u6709\u5230sr c\r\n\r\n8. copy gcc_x86\u4e0b\u7684lib\u5e93\u7684\u5185\u5bb9\u5230src\u4e0b\r\n\r\n9. \u53ef\u4ee5\u5728\u76ee\u5f55\u4e0b\u5728\u521b\u5efa\u4e00\u4e2a\u8fd0\u884c\u811a\u672c,\u7528\u6765\u8bbe\u7f6e\u7a0b\u5e8f\u8fd0\u884c\u5e93\u7684\u8def\u5f84\u7684\r\n  ```\r\n  #!/bin/sh\r\n  appname=`basename $0 | sed s,\\.sh$,,`\r\n  dirname=`dirname $0`\r\n  tmp=\"${dirname#?}\"\r\n  if [ \"${dirname%$tmp}\" != \"/\" ]; then\r\n  dirname=$PWD/$dirname\r\n  fi\r\n  LD_LIBRARY_PATH=$dirname\r\n  export LD_LIBRARY_PATH\r\n  $dirname/$appname \"$@\"\r\n  ```\r\n\r\n\r\n\r\n>>    [\u53c2\u8003\u94fe\u63a5](https://www.huaweicloud.com/articles/ca0f1e1d3ed52d1fd572b4229026aa59.html)\u3002", "top": 0, "createdAt": 1712048262, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P20": {"htmlDir": "docs/post/inotify+rsync-tong-bu-jiao-ben.html", "labels": ["\u811a\u672c"], "postTitle": "inotify+rsync\u540c\u6b65\u811a\u672c", "postUrl": "post/inotify%2Brsync-tong-bu-jiao-ben.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/20", "commentNum": 0, "wordCount": 1405, "description": "> rysnc\u662f\u4e00\u4e2a\u8fdc\u7a0b\u540c\u6b65\u5de5\u5177\r\n> \r\n>  inotify\u662f\u4e00\u79cd\u6587\u4ef6\u7cfb\u7edf\u4e8b\u4ef6\u76d1\u63a7\u673a\u5236\uff0c\u5305\u62ec\u6dfb\u52a0\u3001\u5220\u9664\u3001\u79fb\u52a8\u3001\u4fee\u6539\u7b49\u5404\u79cd\u4e8b\u4ef6\r\n> \r\n>  **inotify+rsync** \u53ef\u4ee5\u5b9e\u73b0\u76d1\u63a7\u67d0\u76ee\u5f55\u662f\u5426\u53d8\u52a8\uff0c\u8fdb\u800c\u589e\u91cf\u5907\u4efd\u540c\u6b65\r\n\r\n### Shell\r\n<!--more-->\r\n```shell\r\ncurrent_date=$(date +%Y%m%d_%H%M%S)\r\nsource_path=/tmp/src/\r\nlog_file=/var/log/rsync_client.log\r\n\r\n#rsync\r\nrsync_server=172.29.88.223\r\nrsync_user=sean\r\nrsync_pwd=/etc/rsync_client.pwd\r\nrsync_module=module_test\r\nINOTIFY_EXCLUDE='(.*/*\\.log|.*/*\\.swp)$|^/tmp/src/mail/(2014|20.*/.*che.*)'\r\nRSYNC_EXCLUDE='/etc/rsyncd.d/rsync_exclude.lst'\r\n\r\n#rsync client pwd check\r\nif [ ! -e ${rsync_pwd} ];then\r\n    echo -e \"rsync client passwod file ${rsync_pwd} does not exist!\"\r\n    exit 0\r\nfi\r\n\r\n#inotify_function\r\ninotify_fun(){\r\n    /usr/bin/inotifywait -mrq --timefmt '%Y/%m/%d-%H:%M:%S' --format '%T %w %f' \\\r\n          --exclude ${INOTIFY_EXCLUDE}  -e modify,delete,create,move,attrib ${source_path} \\\r\n          | while read file\r\n      do\r\n          /usr/bin/rsync -auvrtzopgP --exclude-from=${RSYNC_EXCLUDE} --progress --bwlimit=200 --password-file=${rsync_pwd} ${source_path} ${rsync_user}@${rsync_server}::${rsync_module} \r\n      done\r\n}\r\n\r\n#inotify log\r\ninotify_fun >> ${log_file} 2>&1 &\r\n```\r\n### \u540e\u53f0\u542f\u52a8\u811a\u672c\u5373\u53ef\r\n\r\n### \u7cbe\u7b80\u7248\r\n```\r\n#!/bin/sh\r\n/usr/local/bin/inotifywait -mrq -e modify,attrib,move,create,delete /test | while read file\r\ndo\r\n    rsync -a --delete /test/ 192.168.1.20:/testbak/\r\n    echo \"$file\u5728`date +'%F %T %A'`\u540c\u6b65\u6210\u529f\" >> /var/log/rsync.log\r\ndone\r\n```\u3002", "top": 0, "createdAt": 1712048302, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P21": {"htmlDir": "docs/post/gunicorn-pei-zhi-ji-shi-yong.html", "labels": ["\u811a\u672c"], "postTitle": "gunicorn\u914d\u7f6e\u53ca\u4f7f\u7528", "postUrl": "post/gunicorn-pei-zhi-ji-shi-yong.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/21", "commentNum": 0, "wordCount": 647, "description": "### \u5e38\u7528\u64cd\u4f5c\r\n\r\n\u542f\u52a8:\r\n`gunicorn -c config.py app:app`\r\n\r\n\u505c\u6b62:`ps aux | grep \"gunicorn\"|grep -v \"grep\"|awk -F \" \" '{print $2}| xargs -i kill -9 {}'`\r\n\r\n**awk grep kill** \u914d\u5408\u7740\u6765\uff0c\u6709\u4e9b\u7c97\u9c81\r\n<!--more-->\r\n\r\n### \u914d\u7f6e(\u914d\u7f6e\u6587\u4ef6\u53ef\u662fpy\u6587\u4ef6)\r\n\r\n```\r\nimport multiprocessing\r\nimport os\r\nbase = os.path.abspath(os.path.dirname(__file__))\r\nworkers = multiprocessing.cpu_count() * 2 + 1\r\nthreads = 6\r\nreload = 0.   # debug\u6a21\u5f0f\r\nbind = '0.0.0.0:9999'\r\ndaemon = 'false'     #docker\u4e2d\u8981\u5173\u95ed\r\nworker_class = \"gevent\"    #\r\nworker_connections = 2000\r\nloglevel = 'error'\r\naccesslog = os.path.join(base,\"gunicorn_acess.log\")\r\nerrorlog = os.path.join(base,\"gunicorn_error.log\")\r\nmax_requests=300\r\n```\u3002", "top": 0, "createdAt": 1712048355, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P22": {"htmlDir": "docs/post/flask restfulAPI-shi-li.html", "labels": ["\u4ee3\u7801\u7247\u6bb5"], "postTitle": "flask restfulAPI\u793a\u4f8b", "postUrl": "post/flask%20restfulAPI-shi-li.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/22", "commentNum": 0, "wordCount": 5767, "description": "---\r\n## Flask RestFul\r\n\r\n* \u5b57\u6bb5\u9a8c\u8bc1\r\n*  \u683c\u5f0f\u5316\u8fd4\u56de\r\n\r\n\u6a21\u7248\uff1a\r\n\r\n```Python\r\nfrom flask_restful import Api,reqparse,Resource,inputs\r\nfrom flask_cors import *\r\napp=Flask(__name__)\r\n# \u9700\u8981\u5b9a\u4e00\u4e2aapi\r\napi=Api(app)\r\n# \u89e3\u51b3\u4e00\u4e9b\u8de8\u57df\u95ee\u9898\r\nCORS(app,resource={r\"/*\"})\r\n# CORS(app, resources={r\"/test\": {\"origins\": \"*\"}})\r\n\r\n\r\n# \u4e00\u5b9a\u7ee7\u627f\u81ea Resource\r\nclass TestView(Resource):\r\n\tdef get(self):\r\n\t\t# \u5b57\u6bb5\u9a8c\u8bc1\r\n\t\tparser = reqparse.RequestParser()\r\n\t\tparser.add_argument(\"phone\",required=True,type=inputs.regex(r'\\d{11}'),help=\"\u8f93\u5165\u6b63\u786e\u624b\u673a\u53f7\",trim=True)\r\n\t\tparser.add_argument(\"username\",required=True,type=str,help=\"\u8f93\u5165\u59d3\u540d\")\r\n\t\targs=parser.parse_args() #\u53c2\u6570\u89e3\u6790\u5b8c\u6210\uff0c\u76f4\u63a5get\u5373\u53ef\u83b7\u53d6\r\n\t\treturn args\r\n\t\tpass\r\n\r\napi.add_resource(TestView,\"/test\",endpoint=\"test\")\r\n\t\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n```\r\n\r\n## JWT\u4f7f\u7528\r\n\r\n```python\r\n# flask imports\r\nfrom flask import Flask, request, jsonify, make_response\r\nfrom flask_sqlalchemy import SQLAlchemy\r\nimport uuid  # for public id\r\nfrom werkzeug.security import generate_password_hash, check_password_hash\r\n# imports for PyJWT authentication\r\nimport jwt\r\nfrom datetime import datetime, timedelta\r\nfrom functools import wraps\r\n\r\n# creates Flask object\r\napp = Flask(__name__)\r\n# configuration\r\n# NEVER HARDCODE YOUR CONFIGURATION IN YOUR CODE\r\n# INSTEAD CREATE A .env FILE AND STORE IN IT\r\napp.config['SECRET_KEY'] = 'your secret key'\r\n# database name\r\napp.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///Database.db'\r\napp.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = True\r\n# creates SQLALCHEMY object\r\ndb = SQLAlchemy(app)\r\n\r\n\r\n# Database ORMs\r\nclass User(db.Model):\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    public_id = db.Column(db.String(50), unique=True)\r\n    name = db.Column(db.String(100))\r\n    email = db.Column(db.String(70), unique=True)\r\n    password = db.Column(db.String(80))\r\n\r\n\r\n# decorator for verifying the JWT\r\ndef token_required(f):\r\n    @wraps(f)\r\n    def decorated(*args, **kwargs):\r\n        token = None\r\n        # jwt is passed in the request header\r\n        if 'x-access-token' in request.headers:\r\n            token = request.headers['x-access-token']\r\n        # return 401 if token is not passed\r\n        if not token:\r\n            return jsonify({'message': 'Token is missing !!'}), 401\r\n\r\n        try:\r\n            # decoding the payload to fetch the stored details\r\n            data = jwt.decode(token, app.config['SECRET_KEY'])\r\n            current_user = User.query \\\r\n                .filter_by(public_id=data['public_id']) \\\r\n                .first()\r\n        except:\r\n            return jsonify({\r\n                'message': 'Token is invalid !!'\r\n            }), 401\r\n        # returns the current logged in users contex to the routes\r\n        return f(current_user, *args, **kwargs)\r\n\r\n    return decorated\r\n\r\n\r\n# User Database Route\r\n# this route sends back list of users\r\n@app.route('/user', methods=['GET'])\r\n@token_required\r\ndef get_all_users(current_user):\r\n    # querying the database\r\n    # for all the entries in it\r\n    users = User.query.all()\r\n    # converting the query objects\r\n    # to list of jsons\r\n    output = []\r\n    for user in users:\r\n        # appending the user data json\r\n        # to the response list\r\n        output.append({\r\n            'public_id': user.public_id,\r\n            'name': user.name,\r\n            'email': user.email\r\n        })\r\n\r\n    return jsonify({'users': output})\r\n\r\n\r\n# route for logging user in\r\n@app.route('/login', methods=['POST'])\r\ndef login():\r\n    # creates dictionary of form data\r\n    auth = request.form\r\n\r\n    if not auth or not auth.get('email') or not auth.get('password'):\r\n        # returns 401 if any email or / and password is missing\r\n        return make_response(\r\n            'Could not verify',\r\n            401,\r\n            {'WWW-Authenticate': 'Basic realm =\"Login required !!\"'}\r\n        )\r\n\r\n    user = User.query \\\r\n        .filter_by(email=auth.get('email')) \\\r\n        .first()\r\n\r\n    if not user:\r\n        # returns 401 if user does not exist\r\n        return make_response(\r\n            'Could not verify',\r\n            401,\r\n            {'WWW-Authenticate': 'Basic realm =\"User does not exist !!\"'}\r\n        )\r\n\r\n    if check_password_hash(user.password, auth.get('password')):\r\n        # generates the JWT Token\r\n        token = jwt.encode({\r\n            'public_id': user.public_id,\r\n            'exp': datetime.utcnow() + timedelta(minutes=30)\r\n        }, app.config['SECRET_KEY'])\r\n\r\n        return make_response(jsonify({'token': token.decode('UTF-8')}), 201)\r\n    # returns 403 if password is wrong\r\n    return make_response(\r\n        'Could not verify',\r\n        403,\r\n        {'WWW-Authenticate': 'Basic realm =\"Wrong Password !!\"'}\r\n    )\r\n\r\n\r\n# signup route\r\n@app.route('/signup', methods=['POST'])\r\ndef signup():\r\n    # creates a dictionary of the form data\r\n    data = request.form\r\n\r\n    # gets name, email and password\r\n    name, email = data.get('name'), data.get('email')\r\n    password = data.get('password')\r\n\r\n    # checking for existing user\r\n    user = User.query \\\r\n        .filter_by(email=email) \\\r\n        .first()\r\n    if not user:\r\n        # database ORM object\r\n        user = User(\r\n            public_id=str(uuid.uuid4()),\r\n            name=name,\r\n            email=email,\r\n            password=generate_password_hash(password)\r\n        )\r\n        # insert user\r\n        db.session.add(user)\r\n        db.session.commit()\r\n\r\n        return make_response('Successfully registered.', 201)\r\n    else:\r\n        # returns 202 if user already exists\r\n        return make_response('User already exists. Please Log in.', 202)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    # setting debug to True enables hot reload\r\n    # and also provides a debugger shell\r\n    # if you hit an error while running the server\r\n    app.run(debug=True)\r\n\r\n```\u3002", "top": 0, "createdAt": 1712048462, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P23": {"htmlDir": "docs/post/ti-qu-cookies-fang-fa-zong-jie.html", "labels": ["\u4ee3\u7801\u7247\u6bb5"], "postTitle": "\u63d0\u53d6cookies\u65b9\u6cd5\u603b\u7ed3", "postUrl": "post/ti-qu-cookies-fang-fa-zong-jie.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/23", "commentNum": 0, "wordCount": 1131, "description": "---\r\n* ### \u65b9\u6cd5\u4e00(scrapy\u9002\u7528)\r\n```Python\r\nfrom scrapy.http.cookies import CookieJar\r\ncookie_jar = CookieJar()\r\ncookie_jar.extract_cookies(response, response.request)\r\nfor i in self.cookie_jar:\r\n    p = re.compile(r'<Cookie (.*?) for .*?>')            \r\n    cookies = re.findall(p, str(i))            \r\n    cookies = (cookie.split('=', 1) for cookie in cookies)\r\n    cookies = dict(cookies)\r\n```\r\n\r\n\r\n* ### \u65b9\u6cd5\u4e8c\uff08\u666e\u9002\u7528\uff09\r\n```Python\r\ndef get_cookies(response):\r\n    my_cookies = dict()\r\n    # \u8bf7\u6c42\u5305\u91cc\u5e26\u7684Cookie\r\n    for cookie in response.request.headers.getlist('Cookie'):\r\n        for ck in cookie.decode('utf8').split(';'):\r\n            try:\r\n                my_cookies[ck.split('=')[0].strip()] = ck.split('=')[1].strip()\r\n            except:\r\n                my_cookies[ck.split('=')[0].strip()] = ''\r\n    # \u54cd\u5e94\u5305\u91cc\u7ed9\u7684Set-Cookie\r\n    for cookie in response.headers.getlist('Set-Cookie'):\r\n        for ck in cookie.decode('utf8').split(';'):\r\n            try:\r\n                my_cookies[ck.split('=')[0].strip()] = ck.split('=')[1].strip()\r\n            except:\r\n                my_cookies[ck.split('=')[0].strip()] = ''\r\n    return my_cookies\r\n```\u3002", "top": 0, "createdAt": 1712048542, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P24": {"htmlDir": "docs/post/kao-shi-xin-xi-ji-lu.html", "labels": ["\u8bb0\u5f55"], "postTitle": "\u8003\u8bd5\u4fe1\u606f\u8bb0\u5f55", "postUrl": "post/kao-shi-xin-xi-ji-lu.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/24", "commentNum": 0, "wordCount": 1553, "description": "# \u516c\u52a1\u5458\u5e02\u76f4\u62a5\u8003\u4fe1\u606f\r\n\r\n## \u519b\u961f\u6587\u804c\r\n\r\n\u62a5\u540d\u65f6\u95f4\uff1a2023\u5e741\u670813\u65e58:00\u81f317\u65e5\r\n\r\n\u8003\u8bd5\u65f6\u95f4\uff1a2023\u5e742\u670819\u65e5\r\n\r\n\u8003\u8bd5\u79d1\u76ee\uff1a\u516c\u5171\u79d1\u76ee+ \u65701/2 +\u7269\u7406\r\n\r\n\u7f51\u5740\uff1ahttp://81rc.81.cn/\r\n\r\n![image-20230716111801444](https://raw.githubusercontent.com/evilvlso/picsbed/master/image-20230716111801444.png)\r\n\r\n## \u56fd\u8003\r\n\r\n\u62a5\u540d\u65f6\u95f4\uff1a2022\u5e7410\u670825\u65e58:00\u81f311\u67083\u65e518:00\r\n\r\n\u8003\u8bd5\u65f6\u95f4\uff1a2022\u5e7412\u67084\u65e5\r\n\r\n\u8003\u8bd5\u79d1\u76ee\uff1a\u884c\u6d4b+\u7533\u8bba\r\n\r\n\u7f51\u5740\uff1ahttp://bm.scs.gov.cn/pp/gkweb/core/web/ui/business/home/gkhome.html \r\n\r\n<!--more-->\r\n\r\n## \u7701\u8003\r\n\r\n\u62a5\u540d\u65f6\u95f4\uff1a2023\u5e741\u67083\u65e5-1\u670810\u65e5  \r\n\r\n\u8003\u8bd5\u65f6\u95f4\uff1a2\u670825\u65e5\u300126\u65e5\r\n\r\n\u8003\u8bd5\u79d1\u76ee\uff1a\u884c\u6d4b+\u7533\u8bba\r\n\r\n\u7f51\u5740\uff1ahttps://www.chinagwy.org/shanxi/ \uff08\u975e\u5b98\u65b9\uff0c\u4fe1\u606f\u5168\u4e4e\uff09\r\n\r\n![image-20230716112253117](https://raw.githubusercontent.com/evilvlso/picsbed/master/image-20230716112253117.png)\r\n\r\n![image-20230716112518904](https://raw.githubusercontent.com/evilvlso/picsbed/master/image-20230716112518904.png)\r\n\r\n## \u4e8b\u4e1a\u7f16\r\n\r\n\u62a5\u540d\u65f6\u95f4\uff1a\r\n\r\n\u8003\u8bd5\u65f6\u95f4\uff1a\r\n\r\n\u8003\u8bd5\u79d1\u76ee\uff1a\r\n\r\n\u4e3b\u8981\u770b\u516c\u4f17\u53f7\u7edf\u8ba1\u4fe1\u606f\r\n\r\n\u7f51\u5740\uff1ahttps://www.chinagwy.org/shanxi/ \uff08\u975e\u5b98\u65b9\uff0c\u4fe1\u606f\u5168\u4e4e\uff09\r\n\r\n\r\n\r\n# \u957f\u6cbb\u804c\u4e1a\u6280\u672f\u5b66\u96622023\u6559\u5e08\u62db\u8058\r\n\r\n\u62a5\u540d\u65f6\u95f4\uff1a2023-07-19 12:20:57 \u548c\u5e02\u76f4\u4e00\u8d77\u53d1\u5e03\u7684\r\n\r\n\u8003\u8bd5\u65f6\u95f4\uff1a\r\n\r\n\u8003\u8bd5\u79d1\u76ee\uff1a\r\n\r\n\u4e3b\u8981\u770b\u516c\u4f17\u53f7\u7edf\u8ba1\u4fe1\u606f\r\n\r\nhttps://www.czzy.cn/#/newNotice\r\n\r\n\u7f51\u5740\uff1a\u62a5\u540d\u7f51\u5740\u4e3a\uff1a\u957f\u6cbb\u5e02\u4eba\u529b\u8d44\u6e90\u548c\u793e\u4f1a\u4fdd\u969c\u5c40\u7f51\u7ad9\uff08https://rsj.changzhi.gov.cn/\uff09\r\n\r\n![image-20231006195844013](/Users/dongzai/Library/Application Support/typora-user-images/image-20231006195844013.png)\r\n\r\n![image-20231006195939668](/Users/dongzai/Library/Application Support/typora-user-images/image-20231006195939668.png)\r\n\r\n\r\n\r\n# \u5c71\u897f\u673a\u7535\u804c\u4e1a\u6280\u672f\u5b66\u9662\r\n\r\nhttps://www.sxjdxy.org/xwzx/tzgg.htm\r\n\r\n## \u592a\u539f\u57ce\u5e02\u804c\u4e1a\u6280\u672f\u5b66\u9662\r\n\r\nhttps://www.cntcvc.com/ReadNews.html?id=8671\r\n\r\n## \u5c71\u897f\u804c\u4e1a\u6280\u672f\u5b66\u9662\r\n\r\nhttps://www.sxzy.edu.cn/tzgg.htm\r\n\r\n## \u4e2d\u56fd\u5730\u9707\u7b2c\u4e8c\u76d1\u6d4b\u4e2d\u5fc3\r\nhttps://www.smac.ac.cn/index.php?s=/Home/Article/lists/category/tongzhi.html\u3002", "top": 0, "createdAt": 1712048795, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-02", "dateLabelColor": "#bc4c00"}, "P25": {"htmlDir": "docs/post/jiang-wang-ye-nei-rong-zhuan-huan-wei-markdown-de-gong-ju.html", "labels": ["\u8bb0\u5f55"], "postTitle": "\u5c06\u7f51\u9875\u5185\u5bb9\u8f6c\u6362\u4e3amarkdown\u7684\u5de5\u5177", "postUrl": "post/jiang-wang-ye-nei-rong-zhuan-huan-wei-markdown-de-gong-ju.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/25", "commentNum": 0, "wordCount": 704, "description": "### \u5c06\u7f51\u9875\u5185\u5bb9\u8f6c\u6362\u4e3amarkdown\u7684\u5de5\u5177\r\n\r\n* https://markdowndown.vercel.app/ \r\n* https://jina.ai/reader/#demo \uff08\u8f6c\u4e3a\u4e3a\u5bf9LLM\u8f93\u5165\u53cb\u597d\u7684\u683c\u5f0f\uff09\r\n\r\n\u6bd4\u5982[[\u6587\u7ae0\u7684\u6392\u7248\u89c4\u8303](https://open.leancloud.cn/copywriting-style-guide/)]\r\n-----\r\nLLM+\u722c\u866b\u603b\u7ed3\r\n1. Jina Reader\uff1ahttps://x.com/tuturetom/stat/tuturetom/status/1779377811905769960\r\n2. FireCrawl https://x.com/tuturetom/stat/tuturetom/status/1784405836733030531\r\n3. Skyvern\uff1a[https://x.com/tuturetom/stat/tuturetom/status/1787296091475780054](https://twitter.com/tuturetom/status/1787296091475780054)\r\n4. scrapegraph-ai: (https://scrapegraph-ai.readthedocs.io/en/latest/getting_started/examples.html#openai-models)[https://scrapegraph-ai.readthedocs.io/en/latest/getting_started/examples.html#openai-models]\u3002", "top": 0, "createdAt": 1713234885, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-16", "dateLabelColor": "#bc4c00"}, "P26": {"htmlDir": "docs/post/yi-xie-ping-tai---gong-ju-di-zhi-ji-lu.html", "labels": ["\u8bb0\u5f55"], "postTitle": "\u4e00\u4e9b\u5e73\u53f0/\u5de5\u5177\u5730\u5740\u8bb0\u5f55", "postUrl": "post/yi-xie-ping-tai---gong-ju-di-zhi-ji-lu.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/26", "commentNum": 0, "wordCount": 3482, "description": "\r\nIP \u8d2d\u4e70\u7f51\u7ad9\uff1a\r\n[https://panel.proxyline.net/](https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqa2tLREhWOUhaZ3pVVEtSalVFb2tBR1hVQUk5Z3xBQ3Jtc0ttYUpKM0VZUWpNTXNnQmY2d0dTUEx3WTNfWEs5OXFNUk9YX3dhRWktQmxWWGtLTFJPWTRwR2p2a3gzbURLa0JncEhnYWw1elJ0ZV9ZQmtreHU4MmNaUlo4dTNNOVpranpNb2VmOW9WMi1ja3ZWRmZtZw&q=https%3A%2F%2Fpanel.proxyline.net%2F&v=u7EHk7iNCpU)\r\n\r\nIP \u67e5\u8be2\u7f51\u7ad9 \uff1a \r\n[https://www.iplocation.net/ip-lookup](https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbTNYTWZ6QkF2N2dwSlp6a2w3VC0zRFFSWVM2Z3xBQ3Jtc0tuNHdjQWZhMVo0VnZRZ01Jdld2eDJXVTNjZmlZX2F0ZTdnek1PMk5lOFh5WXZyS3VFYUJfemN1cmVzclljRWRPRk5vWWt1QUw4cHFBZDFmUlBSYmJTU1VyVkNBMlVxdXZ4TkUyb2VKc1FsWWdDT1JNdw&q=https%3A%2F%2Fwww.iplocation.net%2Fip-lookup&v=u7EHk7iNCpU) \r\n\r\n\u6307\u7eb9\u6d4f\u89c8\u5668\u7f51\u7ad9\uff1a\r\n[https://www.adspower.net/](https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqa2lpV0VQeUxZR2kzcFRjR3VRdGtpSXV2VEpvUXxBQ3Jtc0tuQkdXcktEWTBlU1ZUVXpkeTh5ZW9ySmx4dXltcmhlNGZSQkVheVVWMUoxWUZtRllVSmF0eDFsemhPaWpqOFFkUWFWRDktMllVejNnNlNWOWVXME9JX3o2THFtNU1WVEFhMkhiVGtBdDBlYUVoQlk0NA&q=https%3A%2F%2Fwww.adspower.net%2F&v=u7EHk7iNCpU)\r\n\r\nMetaMask \u63d2\u4ef6\u5b89\u88c5\uff1a\r\n[https://chrome.google.com/webstore/de...](https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbU4zSVp1QlplMS1XSTFaOGY1Q1JnaWIxbUFVQXxBQ3Jtc0ttUldmamVTNWYyaG1ZcDhTcXVWZ3VDVlhlNmZFRTkzZ2ItZThDV2hsOXV0ck1CTlU5NjRlVklFZ0s3TjVJVFZUT01abTJJOVRaT0g2aWtoRWhmaUVlX3B5aVd1VzAwRWJGVjBxbjNjUFV1VUFRUTdEMA&q=https%3A%2F%2Fchrome.google.com%2Fwebstore%2Fdetail%2Fmetamask%2Fnkbihfbeogaeaoehlefnkodbefgpgknn&v=u7EHk7iNCpU) \r\n[https://github.com/MetaMask/metamask-...](https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqa1JSSWlMY2IwdDlabWJSTHFHZUwtcXdzbHNHZ3xBQ3Jtc0ttOV80UmZTVTF6SzFXMWdYXzVHWG5ONkcwOERfTDVBclR5cVJ4UEhaUEc5WDZkZEE1WXVFMUhKQlpad0NmdEoyTGVLbWVNbHR1OWNfcnY0LTRzZlNEaEdkRTQ5T1pqTlpELVZIak1DdWtrWExfNmQtOA&q=https%3A%2F%2Fgithub.com%2FMetaMask%2Fmetamask-extension%2Freleases&v=u7EHk7iNCpU)\r\n\r\n\u63a5\u7801\u5e73\u53f0\uff1a\r\n[https://5sim.net/](https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbTB1WGN1ZVBETjRsZXdIQnpXbndCQzlnbzB2Z3xBQ3Jtc0ttWE5vRHAxRlRKWDlZaTg1QUdfOGZsc09NajhhZGxTVHRJWWlvdjJ5QkpGTksxdWtSZkxvUmxfSXdxOV9tQWE0bzdobDJJYmVpdUJTTUNndlEyb2t6OEZIOEVWN2VDSFJnOU0wWGMwbm5OTm03LWtWSQ&q=https%3A%2F%2F5sim.net%2F&v=u7EHk7iNCpU)\r\n [https://www.supersms.ml/](https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbVFHcEszdndJdy1aakxrTTU1c3pEV3lDOHMyUXxBQ3Jtc0trTkhuV083RGFRamhyV1VmLVZ1aTI4TVl3bmhCLTVucXBmbVNzRVRXeS1ldWpFamNJdy1DcU9LUnNIQ1N2T3pPcV9WMnhxX3hoOHJyQ0pkQUlkME91QnZ0eWx5SEFmYV9yQUpOZlV2emJXQVdScVdEOA&q=https%3A%2F%2Fwww.supersms.ml%2F&v=u7EHk7iNCpU)\r\n\r\nGmail \u90ae\u7bb1\u6ce8\u518c\uff1a\r\n[https://www.google.com/gmail/about/](https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqa3RKbk5ZSV9fVWdvV1dnRENOS2M0R283YUNMd3xBQ3Jtc0trV2c1OUJlN0FTbF8wVi1EOUViSVRiTUtTdGpoOVZGQ1BnV3RtRVlZYnBYZ2M1Smt1OUxBRHllaV9tdEJlZzd5VE94VmFnWEdwRU9qUmJYdWxZd1YtbzFmOFF3MnYzc3MwQ3Ricjh2YmpOWGc2MTJuUQ&q=https%3A%2F%2Fwww.google.com%2Fgmail%2Fabout%2F&v=u7EHk7iNCpU)\r\n\r\nTwitter \u6ce8\u518c\uff1a\r\n twitter.com\r\n\r\nDiscord \u6ce8\u518c\uff1a\r\n [https://discord.com/](https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbjVLcVVQNHBXMVpESV8tQ2FJelpnSHFtWXNxQXxBQ3Jtc0traHBCUHU0RWw5U0h6eUZ6VGZyV3FUdW9sNVlucUx1MlhtMXFlUWs5VXFfMXN0U084REk5c1h1UXVKQUZxbUNqVHJfVWt0aFZ0TmY1c3NBdVV5MmUzMDRrS016ejlXLVNpUUZJUkhaTE4zUWRNckstSQ&q=https%3A%2F%2Fdiscord.com%2F&v=u7EHk7iNCpU)\u3002", "top": 0, "createdAt": 1713261958, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-16", "dateLabelColor": "#bc4c00"}, "P27": {"htmlDir": "docs/post/tong-guo-ssh-fan-xiang-sui-dao-cong-gong-wang-fang-wen-dao-ben-di-fu-wu.html", "labels": ["\u811a\u672c"], "postTitle": "\u901a\u8fc7ssh\u53cd\u5411\u96a7\u9053\u4ece\u516c\u7f51\u8bbf\u95ee\u5230\u672c\u5730\u670d\u52a1", "postUrl": "post/tong-guo-ssh-fan-xiang-sui-dao-cong-gong-wang-fang-wen-dao-ben-di-fu-wu.html", "postSourceUrl": "https://github.com/evilvlso/evilvlso.github.io/issues/27", "commentNum": 0, "wordCount": 414, "description": "## \u901a\u8fc7ssh\u53cd\u5411\u96a7\u9053\u4ece\u516c\u7f51\u8bbf\u95ee\u5230\u672c\u5730\u670d\u52a1\r\n\r\n\u6838\u5fc3\u64cd\u4f5c\r\n\r\n```\r\n!mkdir  ~/.ssh/\r\n!touch  ~/.ssh/known_hosts\r\n!ssh-keyscan -t rsa remote.moe >> ~/.ssh/known_hosts\r\n!rm /root/.ssh/id_rsa\r\n!ssh-keygen -t rsa -b 4096 -f /root/.ssh/id_rsa -q -N \"\"\r\n!python /kaggle/working/ComfyUI/main.py & ssh -R 80:127.0.0.1:8188 -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa remote.moe\r\n```\r\n\r\n\u8fd9\u91cc\u7528\u5230\u4e86 [remote.moe](https://github.com/fasmide/remotemoe)\u8fd9\u4e2a\u9879\u76ee\u3002", "top": 0, "createdAt": 1713610676, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "createdDate": "2024-04-20", "dateLabelColor": "#bc4c00"}}, "singeListJson": {}, "labelColorDict": {"AI": "#989D56", "bug": "#d73a4a", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "golang": "#c5def5", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "mysql": "#006b75", "Qt": "#fbca04", "question": "#d876e3", "uwsgi": "#0e8a16", "vimrc": "#1d76db", "vscode": "#5319e7", "wontfix": "#ffffff", "\u4ee3\u7801\u7247\u6bb5": "#f9d0c4", "\u811a\u672c": "#b60205", "\u8bb0\u5f55": "#d93f0b", "\u9762\u7ecf": "#bfd4f2"}, "displayTitle": "tango", "faviconUrl": "https://avatars.githubusercontent.com/u/25767862?v=4", "ogImage": "https://avatars.githubusercontent.com/u/25767862?v=4", "homeUrl": "https://evilvlso.github.io", "prevUrl": "/index.html", "nextUrl": "disabled"}